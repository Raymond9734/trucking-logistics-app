# Generated by Django 5.2.6 on 2025-09-13 04:30

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the trip', primary_key=True, serialize=False)),
                ('current_location', models.CharField(help_text='Current driver location (address or coordinates)', max_length=255)),
                ('current_lat', models.DecimalField(blank=True, decimal_places=7, help_text='Current location latitude (-90 to 90)', max_digits=10, null=True)),
                ('current_lng', models.DecimalField(blank=True, decimal_places=7, help_text='Current location longitude (-180 to 180)', max_digits=10, null=True)),
                ('pickup_location', models.CharField(help_text='Pickup location address', max_length=255)),
                ('pickup_lat', models.DecimalField(blank=True, decimal_places=7, help_text='Pickup location latitude (-90 to 90)', max_digits=10, null=True)),
                ('pickup_lng', models.DecimalField(blank=True, decimal_places=7, help_text='Pickup location longitude (-180 to 180)', max_digits=10, null=True)),
                ('dropoff_location', models.CharField(help_text='Dropoff location address', max_length=255)),
                ('dropoff_lat', models.DecimalField(blank=True, decimal_places=7, help_text='Dropoff location latitude (-90 to 90)', max_digits=10, null=True)),
                ('dropoff_lng', models.DecimalField(blank=True, decimal_places=7, help_text='Dropoff location longitude (-180 to 180)', max_digits=10, null=True)),
                ('current_cycle_used', models.DecimalField(decimal_places=1, help_text='Current cycle hours used (0-70 hours for 8-day cycle)', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(70)])),
                ('driver_name', models.CharField(help_text="Driver's full name", max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the trip was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the trip was last updated')),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', help_text='Current status of the trip', max_length=20)),
                ('total_distance_miles', models.DecimalField(blank=True, decimal_places=2, help_text='Total trip distance in miles', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('estimated_driving_time_hours', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated driving time in hours', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'verbose_name': 'Trip',
                'verbose_name_plural': 'Trips',
                'db_table': 'routes_trip',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['driver_name'], name='routes_trip_driver__b16a3f_idx'), models.Index(fields=['status'], name='routes_trip_status_82f237_idx'), models.Index(fields=['created_at'], name='routes_trip_created_b45bdc_idx')],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the route', primary_key=True, serialize=False)),
                ('total_distance_miles', models.DecimalField(decimal_places=2, help_text='Total route distance in miles', max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('estimated_driving_time_minutes', models.PositiveIntegerField(help_text='Estimated driving time in minutes (excluding stops)')),
                ('route_geometry', models.TextField(blank=True, help_text='Encoded polyline geometry from mapping service')),
                ('calculated_at', models.DateTimeField(auto_now_add=True, help_text='When the route was calculated')),
                ('mapping_service', models.CharField(choices=[('openrouteservice', 'OpenRouteService'), ('google_maps', 'Google Maps'), ('mapbox', 'Mapbox'), ('osrm', 'OSRM')], default='openrouteservice', help_text='Mapping service used for route calculation', max_length=50)),
                ('traffic_considered', models.BooleanField(default=False, help_text='Whether traffic conditions were considered')),
                ('route_profile', models.CharField(default='driving-hgv', help_text='Routing profile used (e.g., driving-hgv for trucks)', max_length=50)),
                ('is_fastest_route', models.BooleanField(default=True, help_text='Whether this is the fastest route option')),
                ('alternative_routes_count', models.PositiveIntegerField(default=0, help_text='Number of alternative routes calculated')),
                ('trip', models.OneToOneField(help_text='The trip this route belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='route', to='routes.trip')),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
                'db_table': 'routes_route',
            },
        ),
        migrations.CreateModel(
            name='Waypoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the waypoint', primary_key=True, serialize=False)),
                ('sequence_order', models.PositiveIntegerField(help_text='Order of waypoint in the route (0-based)')),
                ('latitude', models.DecimalField(decimal_places=7, help_text='Waypoint latitude (-90 to 90 degrees)', max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, help_text='Waypoint longitude (-180 to 180 degrees)', max_digits=10)),
                ('address', models.CharField(blank=True, help_text='Human-readable address of waypoint', max_length=255)),
                ('waypoint_type', models.CharField(choices=[('origin', 'Origin (Current Location)'), ('pickup', 'Pickup Location'), ('dropoff', 'Dropoff Location'), ('rest_stop', 'Mandatory Rest Stop'), ('fuel_stop', 'Fuel Stop'), ('break_30min', '30-Minute Break'), ('break_10hour', '10-Hour Rest Break'), ('route_point', 'Route Point'), ('checkpoint', 'Checkpoint')], help_text='Type/purpose of this waypoint', max_length=20)),
                ('distance_from_previous_miles', models.DecimalField(decimal_places=2, default=0, help_text='Distance from previous waypoint in miles', max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('estimated_time_from_previous_minutes', models.PositiveIntegerField(default=0, help_text='Estimated travel time from previous waypoint in minutes')),
                ('is_mandatory_stop', models.BooleanField(default=False, help_text='Whether this is a mandatory stop (rest/fuel/break)')),
                ('estimated_stop_duration_minutes', models.PositiveIntegerField(default=0, help_text='Estimated stop duration in minutes', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2040)])),
                ('stop_reason', models.CharField(blank=True, help_text="Reason for stop (e.g., '10-hour rest break', 'Fuel stop')", max_length=200)),
                ('hos_regulation', models.CharField(blank=True, help_text="HOS regulation reference (e.g., '395.3(a)(2)')", max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When waypoint was created')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this waypoint')),
                ('route', models.ForeignKey(help_text='The route this waypoint belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='waypoints', to='routes.route')),
            ],
            options={
                'verbose_name': 'Waypoint',
                'verbose_name_plural': 'Waypoints',
                'db_table': 'routes_waypoint',
                'ordering': ['route', 'sequence_order'],
            },
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['trip'], name='routes_rout_trip_id_dd0a94_idx'),
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['calculated_at'], name='routes_rout_calcula_4e376c_idx'),
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['mapping_service'], name='routes_rout_mapping_cc793e_idx'),
        ),
        migrations.AddIndex(
            model_name='waypoint',
            index=models.Index(fields=['route', 'sequence_order'], name='routes_wayp_route_i_000048_idx'),
        ),
        migrations.AddIndex(
            model_name='waypoint',
            index=models.Index(fields=['waypoint_type'], name='routes_wayp_waypoin_95afa3_idx'),
        ),
        migrations.AddIndex(
            model_name='waypoint',
            index=models.Index(fields=['is_mandatory_stop'], name='routes_wayp_is_mand_dcff71_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='waypoint',
            unique_together={('route', 'sequence_order')},
        ),
    ]
