# Generated by Django 5.2.6 on 2025-09-13 04:30

import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('routes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the daily log', primary_key=True, serialize=False)),
                ('log_date', models.DateField(help_text='Date this log covers (24-hour period starting time)')),
                ('driver_name', models.CharField(help_text="Driver's full legal name", max_length=100)),
                ('co_driver_name', models.CharField(blank=True, help_text="Co-driver's name (if applicable)", max_length=100)),
                ('carrier_name', models.CharField(help_text='Motor carrier name', max_length=200)),
                ('carrier_main_office_address', models.CharField(help_text='Main office address (city, state sufficient)', max_length=300)),
                ('vehicle_number', models.CharField(help_text='Truck/tractor number or license plate', max_length=50)),
                ('trailer_number', models.CharField(blank=True, help_text='Trailer number (if applicable)', max_length=50)),
                ('total_miles_driving_today', models.DecimalField(decimal_places=1, default=0, help_text='Total miles driven during this 24-hour period', max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_hours_off_duty', models.DecimalField(decimal_places=2, default=0, help_text='Total off-duty hours', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)])),
                ('total_hours_sleeper_berth', models.DecimalField(decimal_places=2, default=0, help_text='Total sleeper berth hours', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)])),
                ('total_hours_driving', models.DecimalField(decimal_places=2, default=0, help_text='Total driving hours', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(11)])),
                ('total_hours_on_duty_not_driving', models.DecimalField(decimal_places=2, default=0, help_text='Total on-duty not driving hours', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)])),
                ('period_start_time', models.TimeField(default=datetime.time(0, 0), help_text='Starting time for 24-hour period (usually midnight)')),
                ('shipping_document_numbers', models.TextField(blank=True, help_text='Shipping document numbers or shipper/commodity info')),
                ('is_certified', models.BooleanField(default=False, help_text='Driver certification that entries are true and correct')),
                ('driver_signature_date', models.DateTimeField(blank=True, help_text='When driver signed/certified the log', null=True)),
                ('remarks', models.TextField(blank=True, help_text='Remarks including city/state for duty status changes')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this daily log was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this daily log was last updated')),
                ('trip', models.ForeignKey(help_text='The trip this daily log belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='daily_logs', to='routes.trip')),
            ],
            options={
                'verbose_name': 'Daily Log',
                'verbose_name_plural': 'Daily Logs',
                'db_table': 'eld_logs_dailylog',
                'ordering': ['-log_date'],
            },
        ),
        migrations.CreateModel(
            name='DutyStatusRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the duty status record', primary_key=True, serialize=False)),
                ('duty_status', models.CharField(choices=[('off_duty', 'Off Duty'), ('sleeper_berth', 'Sleeper Berth'), ('driving', 'Driving'), ('on_duty_not_driving', 'On Duty (Not Driving)')], help_text='Duty status for this time period', max_length=20)),
                ('start_time', models.DateTimeField(help_text='When this duty status period started')),
                ('end_time', models.DateTimeField(blank=True, help_text='When this duty status period ended', null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=0, help_text='Duration of this duty status in minutes', validators=[django.core.validators.MinValueValidator(0)])),
                ('location_city', models.CharField(blank=True, help_text='City where duty status changed', max_length=100)),
                ('location_state', models.CharField(blank=True, help_text='State where duty status changed (2-letter abbreviation preferred)', max_length=50)),
                ('location_description', models.CharField(blank=True, help_text="Location description (e.g., 'I-95 Mile 45', 'Rest Area', 'Customer Site')", max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, help_text='Latitude where duty status changed (-90 to 90)', max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, help_text='Longitude where duty status changed (-180 to 180)', max_digits=10, null=True)),
                ('remarks', models.CharField(blank=True, help_text='Additional remarks for this duty status change', max_length=200)),
                ('odometer_reading', models.PositiveIntegerField(blank=True, help_text='Vehicle odometer reading at status change', null=True)),
                ('miles_driven_this_period', models.DecimalField(decimal_places=1, default=0, help_text='Miles driven during this duty status period', max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('sequence_order', models.PositiveIntegerField(help_text='Order of this record within the daily log (0-based)')),
                ('record_type', models.CharField(choices=[('automatic', 'Automatic (ELD Generated)'), ('manual', 'Manual Entry'), ('assumed', 'Assumed (Gap Filling)'), ('edited', 'Edited Record')], default='manual', help_text='How this record was created', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('daily_log', models.ForeignKey(help_text='The daily log this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='duty_status_records', to='eld_logs.dailylog')),
            ],
            options={
                'verbose_name': 'Duty Status Record',
                'verbose_name_plural': 'Duty Status Records',
                'db_table': 'eld_logs_dutystatusrecord',
                'ordering': ['daily_log', 'sequence_order'],
            },
        ),
        migrations.CreateModel(
            name='LogSheet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the log sheet', primary_key=True, serialize=False)),
                ('grid_data', models.JSONField(default=dict, help_text='24-hour grid data for visual representation')),
                ('has_graph_lines', models.BooleanField(default=False, help_text='Whether duty status lines have been drawn on grid')),
                ('pdf_generated', models.BooleanField(default=False, help_text='Whether PDF version has been generated')),
                ('pdf_file_path', models.CharField(blank=True, help_text='Path to generated PDF file', max_length=500)),
                ('image_generated', models.BooleanField(default=False, help_text='Whether image version has been generated')),
                ('image_file_path', models.CharField(blank=True, help_text='Path to generated image file', max_length=500)),
                ('is_compliant', models.BooleanField(default=True, help_text='Whether this log sheet meets HOS requirements')),
                ('compliance_issues', models.JSONField(default=list, help_text='List of compliance issues found')),
                ('last_compliance_check', models.DateTimeField(blank=True, help_text='When compliance was last checked', null=True)),
                ('compliance_score', models.PositiveIntegerField(default=100, help_text='Compliance score (0-100)')),
                ('generated_at', models.DateTimeField(auto_now=True, help_text='When log sheet was last generated')),
                ('generator_version', models.CharField(default='1.0', help_text='Version of log generation system used', max_length=50)),
                ('layout_size', models.CharField(choices=[('letter', 'Letter (8.5" x 11")'), ('legal', 'Legal (8.5" x 14")'), ('a4', 'A4 (210mm x 297mm)')], default='letter', help_text='Page size for generated documents', max_length=10)),
                ('color_theme', models.CharField(choices=[('standard', 'Standard Black/White'), ('color', 'Color-Coded Status'), ('high_contrast', 'High Contrast')], default='standard', help_text='Color theme for visual representation', max_length=15)),
                ('daily_log', models.OneToOneField(help_text='The daily log this sheet represents', on_delete=django.db.models.deletion.CASCADE, related_name='log_sheet', to='eld_logs.dailylog')),
            ],
            options={
                'verbose_name': 'Log Sheet',
                'verbose_name_plural': 'Log Sheets',
                'db_table': 'eld_logs_logsheet',
            },
        ),
        migrations.AddIndex(
            model_name='dailylog',
            index=models.Index(fields=['trip', 'log_date'], name='eld_logs_da_trip_id_20e799_idx'),
        ),
        migrations.AddIndex(
            model_name='dailylog',
            index=models.Index(fields=['driver_name'], name='eld_logs_da_driver__f77c56_idx'),
        ),
        migrations.AddIndex(
            model_name='dailylog',
            index=models.Index(fields=['log_date'], name='eld_logs_da_log_dat_54fd38_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dailylog',
            unique_together={('trip', 'log_date')},
        ),
        migrations.AddIndex(
            model_name='dutystatusrecord',
            index=models.Index(fields=['daily_log', 'sequence_order'], name='eld_logs_du_daily_l_c1bff6_idx'),
        ),
        migrations.AddIndex(
            model_name='dutystatusrecord',
            index=models.Index(fields=['duty_status'], name='eld_logs_du_duty_st_a41ba2_idx'),
        ),
        migrations.AddIndex(
            model_name='dutystatusrecord',
            index=models.Index(fields=['start_time'], name='eld_logs_du_start_t_9c0091_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dutystatusrecord',
            unique_together={('daily_log', 'sequence_order')},
        ),
        migrations.AddIndex(
            model_name='logsheet',
            index=models.Index(fields=['daily_log'], name='eld_logs_lo_daily_l_8af2ec_idx'),
        ),
        migrations.AddIndex(
            model_name='logsheet',
            index=models.Index(fields=['is_compliant'], name='eld_logs_lo_is_comp_a3c56e_idx'),
        ),
        migrations.AddIndex(
            model_name='logsheet',
            index=models.Index(fields=['generated_at'], name='eld_logs_lo_generat_dbe967_idx'),
        ),
    ]
